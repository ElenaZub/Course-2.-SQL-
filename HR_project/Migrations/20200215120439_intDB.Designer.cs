// <auto-generated />
using System;
using HR_project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HR_project.Migrations
{
    [DbContext(typeof(HRDBContext))]
    [Migration("20200215120439_intDB")]
    partial class intDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HR_project.Models.Countries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasMaxLength(2)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("RegionsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionsId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("HR_project.Models.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LocationsId")
                        .HasColumnType("int");

                    b.Property<int>("ManagersId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("LocationsId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("HR_project.Models.Employees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CommissionPct")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DepartmentsId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("JobHistoriesEmployeesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("JobHistoriesStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobsId")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentsId");

                    b.HasIndex("JobsId");

                    b.HasIndex("JobHistoriesEmployeesId", "JobHistoriesStartDate");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HR_project.Models.JobGrades", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("HighestSal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowestSal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("JobGrades");
                });

            modelBuilder.Entity("HR_project.Models.JobHistories", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobsId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("EmployeesId", "StartDate");

                    b.HasIndex("DepartmentsId");

                    b.HasIndex("JobsId");

                    b.ToTable("JobHistories");
                });

            modelBuilder.Entity("HR_project.Models.Jobs", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinSalary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("HR_project.Models.Locations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("CountriesId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("StateProvince")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.HasIndex("CountriesId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("HR_project.Models.Regions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("HR_project.Models.Countries", b =>
                {
                    b.HasOne("HR_project.Models.Regions", "Regions")
                        .WithMany("Countries")
                        .HasForeignKey("RegionsId");
                });

            modelBuilder.Entity("HR_project.Models.Departments", b =>
                {
                    b.HasOne("HR_project.Models.Locations", "Locations")
                        .WithMany("Departments")
                        .HasForeignKey("LocationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HR_project.Models.Employees", b =>
                {
                    b.HasOne("HR_project.Models.Departments", "Departments")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentsId");

                    b.HasOne("HR_project.Models.Jobs", "Jobs")
                        .WithMany("Employees")
                        .HasForeignKey("JobsId");

                    b.HasOne("HR_project.Models.JobHistories", "JobHistories")
                        .WithMany("Employees")
                        .HasForeignKey("JobHistoriesEmployeesId", "JobHistoriesStartDate");
                });

            modelBuilder.Entity("HR_project.Models.JobHistories", b =>
                {
                    b.HasOne("HR_project.Models.Departments", "Departments")
                        .WithMany("JobHistories")
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR_project.Models.Jobs", "Jobs")
                        .WithMany("JobHistories")
                        .HasForeignKey("JobsId");
                });

            modelBuilder.Entity("HR_project.Models.Locations", b =>
                {
                    b.HasOne("HR_project.Models.Countries", "Countries")
                        .WithMany("Locations")
                        .HasForeignKey("CountriesId");
                });
#pragma warning restore 612, 618
        }
    }
}
